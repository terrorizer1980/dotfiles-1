"                 __
"  __          __/\ \__               __
" /\_\    ___ /\_\ \ ,_\      __  __ /\_\    ___ ___
" \/\ \ /' _ `\/\ \ \ \/     /\ \/\ \\/\ \ /' __` __`\
"  \ \ \/\ \/\ \ \ \ \ \_  __\ \ \_/ |\ \ \/\ \/\ \/\ \
"   \ \_\ \_\ \_\ \_\ \__\/\_\\ \___/  \ \_\ \_\ \_\ \_\
"    \/_/\/_/\/_/\/_/\/__/\/_/ \/__/    \/_/\/_/\/_/\/_/
"
"
" Author: N. G. Scheurich <nick@scheurich.me>
" Repo: https://github.com/ngscheurich/dotfiles

" Plugins
call plug#begin('~/.local/share/nvim/plugged')
" Plug 'sheerun/vim-polyglot'  " On-demand language support
Plug 'justinmk/vim-sneak'    " Jump to any location specified by two characters
Plug 'mhinz/vim-startify'    " Fancy start screen
Plug 'srcery-colors/srcery-vim'
Plug 'tpope/vim-abolish'     " Operate on variants of a word (plural, case, etc.)
Plug 'tpope/vim-commentary'  " Toggle comments
Plug 'tpope/vim-dispatch'    " Perform async tasks in a tmux split
Plug 'tpope/vim-endwise'     " End coding structures automatically, e.g., `do`...`end`
Plug 'tpope/vim-fugitive'    " Git integration
Plug 'tpope/vim-sensible'    " Defaults everyone can agree on
Plug 'tpope/vim-sleuth'      " Heuristically set buffer indentation options
Plug 'tpope/vim-speeddating' " Use CTRL-A/CTRL-X to increment dates, times, and more
Plug 'tpope/vim-surround'    " Operate on surroundings, e.g., parentheses, brackets, quotes
Plug 'tpope/vim-unimpaired'  " Complementary key mappings based around [ and ]
Plug 'tpope/vim-vinegar'     " Navigate up a directory in netrw
Plug 'w0rp/ale'
Plug 'mhartington/nvim-typescript',
            \ {'do': './install.sh'}
Plug 'pangloss/vim-javascript'
Plug 'leafgarland/typescript-vim'
Plug 'maxmellon/vim-jsx-pretty'
Plug 'Shougo/deoplete.nvim',
            \ { 'do': ':UpdateRemotePlugins' }
Plug 'ludovicchabant/vim-gutentags'
Plug 'prettier/vim-prettier',
            \{ 'do': 'yarn install' }
Plug 'morhetz/gruvbox'
Plug 'vim-airline/vim-airline'
Plug 'scrooloose/nerdtree'
Plug 'Shougo/denite.nvim',
            \ { 'do': ':UpdateRemotePlugins' }
Plug 'ludovicchabant/vim-gutentags'
Plug 'ryanoasis/vim-devicons'
call plug#end()

" Backups
set noswapfile               " Don't use swapfiles
set nowritebackup            " Don't create a backup before writing a file

" Colors
syntax enable                " Enable syntax processing
set background=dark          " Use light-on-dark colors
set termguicolors            " Use 24-bit color if the terminal supports it
colorscheme gruvbox          " Use gruvbox

" Folds
set foldenable               " Enable folding
set foldlevelstart=5         " Maximum fold depth open by default
set foldnestmax=10           " Maximum allowed fold depth

" Indentation
set expandtab                " Insert proper amount of spaces in Insert mode
set shiftwidth=2             " Number of spaces to use for each step of (auto)indent
set smartindent              " Intelligently indent new lines
set softtabstop=2            " Number of spaces per <Tab> while editing
set tabstop=2                " Number of spaces per <Tab>

" User Interface
hi Comment cterm=italic      " Italicize comments
hi Todo cterm=italic         " Italicize TODOs
let g:netrw_banner=0         " No netrw banner
set cursorline               " Highlight current line
set colorcolumn=             " Don't highlight any columns
set fillchars+=vert:â”‚        " Customize split borders
set noshowmode               " Don't display editing mode (vim-airline shows this)
set number                   " Show line numbers
set relativenumber           " Show relative line numbers
set signcolumn=yes           " Show signs to the left of line numbers
set splitbelow               " Open horizontal splits below current window
set splitright               " Open vertical splits to the right of the current window

" Searching
set ignorecase               " Ignore case when searching
set smartcase                " Ignore case when searching lowercase

" Status line
set statusline=
set statusline+=\ %f
set statusline+=%=
set statusline+=\ %y
set statusline+=\ %{&fileencoding?&fileencoding:&encoding}
set statusline+=\[%{&fileformat}\]
set statusline+=\ %p%%
set statusline+=\ %l:%c
set statusline+=\ 

" Keybindings
let mapleader = ","
noremap <CR> :noh<CR>
noremap <Leader>m :silent make<CR>
noremap <Leader>f :Denite file/rec<CR>
noremap <Leader>b :Denite buffer<CR>
noremap <Leader>/ :Denite grep
noremap <Tab> :tabnext<CR>
noremap <S-Tab> :tabnext<CR>
noremap <Leader>\ :NERDTreeToggle<CR>
inoremap jk <ESC>

" Autocommands
augroup filetypes
    autocmd!
    autocmd FileType ruby map <Leader>s :call RunCurrentSpecFile()
    autocmd FileType vim setlocal tabstop=4 softtabstop=4 shiftwidth=4
    autocmd FileType typescript noremap <Leader>] :TSDef<CR>
augroup END

let g:prettier#autoformat = 0
augroup prettier
  autocmd!
  autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md,*.vue PrettierAsync
augroup END

augroup nerdtree
  autocmd!
  autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
augroup END

" vim-startify
let g:startify_custom_header =
            \ map(split(system('cat ~/.config/nvim/banner.txt'), '\n'), '"   ". v:val')

" let g:vim_jsx_pretty_colorful_config = 1
let g:deoplete#enable_at_startup = 1

" let g:lightline = { 'colorscheme': 'tenderplus' }

let g:srcery_italic = 1
let g:gruvbox_italic = 1
let g:airline#extensions#tabline#enabled = 0
let NERDTreeShowHidden=1

call denite#custom#var('file/rec', 'command',
      \ ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
call denite#custom#filter('matcher/ignore_globs', 'ignore_globs',
      \ [ '.git/', 'node_modules/', 'build/', 'dist/', 'deps/' ])

